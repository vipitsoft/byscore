@{
    Layout = "_Layout1";
    ViewData["Title"] = "菜单管理";
}
<link rel="stylesheet" href="~/lib/treeview/css/bootstrap-treeview.min.css" />


<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            菜单管理
        </h1>
        <ol class="breadcrumb">
            <li><a href="/home/index"><i class="fa fa-home"></i> 首页</a></li>
            <li>系统设置</li>
            <li class="active">菜单列表</li>
        </ol>
    </section>

    <!-- Main content -->
    <section class="content">
        <div class="row">
            <div class="col-xs-4">
                <div class="box box-primary">
                    <div id="tree"></div>
                </div>
            </div>

            <div class="col-md-8">
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <h3 class="box-title">菜单维护</h3>
                        <div class="pull-right box-tools">
                            <button id="btnAdd" title="" class="btn btn-primary" type="button" data-original-title="新增菜单" data-toggle="tooltip" data-widget="">
                                <i class="fa fa-plus-circle"></i>&nbsp;&nbsp;新增
                            </button>
                            <button id="btnDelete" title="" class="btn btn-danger" disabled="disabled" onclick="DelMenu()" type="button" data-original-title="删除菜单" data-toggle="tooltip" data-widget="">
                                <i class="fa fa-times"></i>&nbsp;&nbsp;删除
                            </button>
                        </div>
                    </div>
                    <form class="form-horizontal" style="display:none;" id="menuForm">
                        <input type="hidden" id="Id" name="Id" />
                        <input type="hidden" id="Code" name="Code" />
                        <input type="hidden" id="CreatedTime" name="CreatedTime" />
                        <div class="box-body">
                            <div class="form-group">
                                <label class="col-sm-2 control-label" for="">菜单名称</label>
                                <div class="col-sm-10">
                                    <input class="form-control" id="CName" name="CName" type="text" placeholder="菜单名称">
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" for="inputPassword3">父级</label>
                                <div class="col-sm-10">
                                    <select class="form-control" id="ParentId" name="ParentId">
                                        <option value="0">顶级导航</option>
                                        @{
                                            List<Menu> menus = cacheService.Get<List<Menu>>(SysConsts.MENULIST);//TempData[SysConsts.MENULIST].ToString().FromJSON<List<Menu>>();
                                            foreach (var item in menus)
                                            {
                                                <option value="@item.Id">@item.CName</option>
                                            }
                                        }

                                    </select>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" for="EName">菜单编码</label>
                                <div class="col-sm-10">
                                    <input class="form-control" id="EName" name="EName" type="text" placeholder="菜单编码">
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" for="Type">功能类型</label>
                                <div class="col-sm-10">
                                    <select class="form-control" id="Type" name="Type">
                                        <option value="0">导航菜单</option>
                                        <option value="1">操作按钮</option>
                                        <option value="2">数据接口</option>
                                    </select>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" for="">链接地址</label>
                                <div class="col-sm-10">
                                    <input class="form-control" id="Url" name="Url" type="text" placeholder="链接地址">
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" for="">功能图标</label>
                                <div class="col-sm-10">
                                    <input class="form-control" id="Icon" name="Icon" type="text" placeholder="功能图标">
                                    <a href="http://www.fontawesome.com.cn/faicons/" target="_blank">选择图标</a>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" for="">排序</label>
                                <div class="col-sm-10">
                                    <input class="form-control" id="Sort" name="Sort" type="text" placeholder="排序(数字越小，越靠前)">
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label" for="">功能描述</label>
                                <div class="col-sm-10">
                                    <textarea id="Remarks" name="Remarks" class="form-control" rows="3"></textarea>
                                </div>
                            </div>
                        </div>
                        <div class="box-footer">
                            <div class="pull-right box-tools">
                                <button id="btnMenuAdd" class="btn btn-primary" type="submit">保存</button>
                                <button id="btnMenuEdit" style="display:none;" class="btn btn-primary" type="submit">保存</button>
                                <button class="btn btn-default" type="button" id="btnCancel" data-dismiss="modal">取消</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <!-- /.row -->
    </section>
    <!-- /.content -->
</div>

@section Scripts{

    <script src="~/lib/treeview/js/bootstrap-treeview.min.js"></script>
    <script src="~/lib/bootstrap-validator/dist/js/bootstrapValidator.min.js"></script>
    <script src="~/lib/bootstrap-validator/dist/js/language/zh_CN.js"></script>
    <link href="~/lib/bootstrap-validator/dist/css/bootstrapValidator.min.css" rel="stylesheet" />
    <script src="~/lib/jquery/dist/jquery.form.js"></script>
    <link href="~/lib/toastr/toastr.css" rel="stylesheet" />
    <script src="~/lib/toastr/toastr.min.js"></script>
    <script src="~/js/toastrconfig.js"></script>
    <script src="~/lib/confirm/confirm.js"></script>
    <script src="~/js/site.js"></script>
    <script>
        $(function () {
        $.ajax({
            type: "Post",
            url: "/sys/GetMenuList",
            dataType: "json",
            success: function (result) {
                if(result.isGet == false){
                    alert(result.msg);
                    return;
                }
                $('#tree').treeview({
                    data: result.data,         // 数据源
                    levels: 1,
                    showCheckbox: false,   //是否显示复选框
                    highlightSelected: true,    //是否高亮选中
                    //nodeIcon: 'glyphicon glyphicon-user',    //节点上的图标
                    //nodeIcon: 'glyphicon glyphicon-globe',
                    emptyIcon: '',    //没有子节点的节点图标
                    multiSelect: false,    //多选
                    showTags: true,
                    onNodeChecked: function (event,data) {
                        //alert(data);
                    },
                    onNodeSelected: function (event, data) {
                        $.ajax({
                            type: "get",
                            url: "/sys/GetMenuByCode",
                            data: { "code": data.code },
                            dataType: "json",
                            success: function (data) {
                               if(data.isGet == false)
                                {
                                    alert(data.Msg);
                                    return;
                                }
                                //console.log(data);
                                $("#menuForm").css("display", "");
                                $("#Id").val(data.menu.id);
                                $("#Code").val(data.menu.code);
                                $("#CName").val(data.menu.cName);
                                $("#EName").val(data.menu.eName);
                                $("#Url").val(data.menu.url);
                                $("#Sort").val(data.menu.sort);
                                $("#Icon").val(data.menu.icon);
                                $("#Sort").val(data.menu.sort);
                                $("#CreatedTime").val(data.menu.createdTime);
                                $("#Remarks").val(data.menu.remarks);
                                $("#ParentId").find("option").each(function(index){
                                    if($(this).val() == data.menu.parentId){
                                        $("#ParentId option:eq("+index+")").prop("selected",true);
                                    }

                                    if($(this).val() == data.menu.id){
                                        $("#ParentId option:eq("+index+")").prop("disabled","disabled");
                                    }else{
                                        $("#ParentId option:eq("+index+")").prop("disabled","");
                                    }
                                });
                                $("#Type").find("option").each(function(index){
                                    if($(this).val() == data.menu.type){
                                        $("#Type option:eq("+index+")").prop("selected",true);
                                    }
                                });
                                $("#btnMenuAdd").css("display", "none");
                                $("#btnMenuEdit").css("display", "");
                                $("#btnDelete").removeAttr("disabled");
                            },
                            error: function (e) {
                            alert(e.responseText);

                            },
                            complete: function () {

                            }

                        });
                    }
                });
            },
            error: function () {
                alert("树形结构加载失败！")
            }
        });
       // 新增按钮事件
        $("#btnAdd").click(function(){
            $("#menuForm").css("display","");
            // 初始化文本域
            ClearVal();
        });

        // 取消按钮
        $("#btnCancel").click(function(){
         $("#menuForm").css("display","none");
            // 初始化文本域
            ClearVal();
        });

         $('form').bootstrapValidator({
            message: 'This value is not valid',
                 feedbackIcons: {
                            valid: 'glyphicon glyphicon-ok',
                            invalid: 'glyphicon glyphicon-remove',
                            validating: 'glyphicon glyphicon-refresh'
                           },
                fields: {
                    CName: {
                        message: '菜单名验证失败！',
                        validators: {
                            notEmpty: {
                                message: '菜单名称不能为空！'
                            }
                        }
                    },
                    EName: {
                        validators: {
                            notEmpty: {
                                message: '菜单编码不能为空！'
                            }
                        }
                    }
                }
            });
            $("#btnMenuAdd").on("click", function(){
            var opt = {
                    type: "POST",
                    dataType: "json",
                    url: "/sys/MenuAdd",
                    success: function (data) {
                        if (data.isadd == true) {
                            toastr.success("保存成功！");
                            setTimeout(function(){ window.location.reload(); }, 3000);
                        }
                        else
                        {
                            toastr.error("保存失败！");
                            $("#btnMenuAdd").removeAttr("disabled");
                        }
                    },
                     error: function (e) {
                            alert(e.responseText);
                            $("#btnMenuAdd").removeAttr("disabled");
                            },

                    };
                 $("#menuForm").ajaxForm(opt);
            })

        $("#btnMenuEdit").on("click", function(){
            var opt = {
                    type: "POST",
                    dataType: "json",
                    url: "/sys/MenuEdit",
                    success: function (data) {
                        if (data.isedit == true) {
                            toastr.success("保存成功！");
                            setTimeout(function(){ window.location.reload(); }, 3000);
                        }
                        else
                        {
                            toastr.error("保存失败！");
                            $("#btnMenuEdit").removeAttr("disabled");
                        }
                    },
                error: function (e) {
                            alert(e.responseText);
                            $("#btnMenuEdit").removeAttr("disabled");
                            },
                    };
                 $("#menuForm").ajaxForm(opt);
            })
    })

    function ClearVal(){
        $("#ParentId option:eq(0)").prop("selected",true);
        $("#Id").val("");
        $("#Code").val("");
        $("#CName").val("");
        $("#EName").val("");
        $("#Url").val("");
        $("#Icon").val("");
        $("#Sort").val("");
        $("#Remarks").val("");
        $("#CreatedTime").val("");
        $("#Type option:eq(0)").prop("selected",true);

        $("#btnDelete").attr("disabled","disabled");
        $("#btnMenuAdd").css("display", "");
        $("#btnMenuEdit").css("display", "none");
    }

            function DelMenu() {
            Ewin.confirm({ message: "确认要删除选择的数据吗？" }).on(function (e) {
                    if (!e) {
                        return;
                    }
                var code = $("#Code").val();
                    $.ajax({
                        type: "get",
                        url: "/sys/DelMenu",
                        data: { "code": code },
                        dataType: "json",
                        success: function (data) {
                            if (data.isdel == true) {
                                toastr.success('删除成功！');
                                setTimeout(function(){ window.location.reload(); }, 3000);
                            }else{
                                toastr.error('删除失败！');
                            }
                        },
                        error: function (e) {
                            alert(e.responseText);

                            },
                        complete: function () {

                        }

                    });
                });
            };

    </script>
}